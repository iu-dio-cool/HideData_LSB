# 编写人员：刘嘉豪
#
# 开发时间：2022/6/14 20:03
import math
from PIL import Image
import Efficiency


def plus(string):
    # Python zfill() 方法返回指定长度的字符串，原字符串右对齐，前面填充0。

    return string.zfill(8)


def mod(x, y):
    return x % y


def get_key(n, mod, str2):  # 进制转换，str1=0 表示n进制转二进制，str=1 表示二进制转n进制 str2进制字符串
    s = ""
    if mod == 0:
        i = int(str2, n)
        k = bin(i).replace('0b', '')
        s = str(k)
        print(str2, "\n", n, "进制转2进制：", s)
        return s
    elif mod == 1:
        i = int(str2, 2)
        print("i=", i)
        while i > 0:
            k = i % n
            i = i // n
            s += str(k)
        print(str2, "二进制转n进制:", s[::-1], )
        return s[::-1]


# 隐藏函数
def func(str1, str2, str3):
    im2 = Image.open(str1)
    # 转换成灰度图
    im = im2.convert('L')
    # 获取图片的宽和高
    width = im.size[0]
    print("width:" + str(width) + "\n")
    height = im.size[1]
    print("height:" + str(height) + "\n")
    count = 0
    # 获取需要隐藏的信息
    key = get_key(5, 1, str2)  # key是转换n进制后的值
    # 隐藏信息长度
    keylen = len(key)
    print("len=", keylen)
    for h in range(0, height):

        for w in range(0, width, 1):
            if count == keylen:
                break
            p1 = im.getpixel((w, h))  # 第i位置的像数值
            print("p1={},key-count={}".format(p1, key[count]))
            if 0 <= p1 <= 1:
                for x in range(0, 5, 1):
                    f = mod((p1 + x), 5)
                    print("f=", f)
                    if f == int(key[count]):
                        print("f相等={},key={}".format(f, key[count]))
                        p2 = p1 + x
                        im.putpixel((w, h), p2)
            elif 1 < p1 < 254:
                for x in range(-2, 3, 1):
                    f = mod((p1 + x), 5)
                    print("f=", f)
                    if f == int(key[count]):
                        print("f相等={},key={}".format(f, key[count]))
                        p2 = p1 + x
                        im.putpixel((w, h), p2)
            elif 254 <= p1 <= 255:
                for x in range(-4, 1, 1):
                    f = mod((p1 + x), 5)
                    print("f=", f)
                    if f == int(key[count]):
                        print("f相等={},key={}".format(f, key[count]))
                        p2 = p1 + x
                        im.putpixel((w, h), p2)
            count += 1
        if count == keylen:
            break

    #  im.show()
    im.save(str3)


def func2(le, str1):
    im = Image.open(str1)

    width = im.size[0]

    height = im.size[1]
    str2 = ""
    count = 0
    for h in range(0, height):

        for w in range(0, width, ):
            if count == le:
                break
            pixel1 = im.getpixel((w, h))  # 第i位置的像数值
            # 计算f值
            f = mod(pixel1, 5)
            str2 += str(f)
            count += 1
            if count == le:
                print("str2=", str2)
                print("所求原二进制数据=", get_key(5, 0, str2))
                break


# 原图
old = "D:\study_python\\newprogram\cat.png"
# 处理后输出的图片路径
new = "D:\study_python\\newprogram\cat_test.png"
# 需要隐藏的信息
enc = "D:\study_python\\newprogram\\flag.txt"


func(old, '110101101001', new)
print("psnr=", Efficiency.psnr(old, new))
func2(6, new)
